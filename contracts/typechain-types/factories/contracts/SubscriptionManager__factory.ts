/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SubscriptionManager,
  SubscriptionManagerInterface,
} from "../../contracts/SubscriptionManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subscriptionId",
        type: "uint256",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "createSubscription",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subscriptionId",
        type: "uint256",
      },
    ],
    name: "executeSubscriptionPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveSubscriptions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subscriptionId",
        type: "uint256",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interval",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextPayment",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct SubscriptionManager.Subscription",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nextPayment",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000885760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007f9190620001a9565b60405180910390fd5b6200009981620000a060201b60201c565b50620001c6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b82525050565b6000602082019050620001c0600083018462000198565b92915050565b6117f380620001d66000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461014d578063871590ce146101575780638da5cb5b14610187578063dc311dd3146101a5578063f2fde38b146101d55761009e565b8063173b6d90146100a357806321235083146100c15780632d5bbf60146100dd5780634102b1fb146101135780635bdc42691461012f575b600080fd5b6100ab6101f1565b6040516100b89190610eed565b60405180910390f35b6100db60048036038101906100d69190610f39565b6101f7565b005b6100f760048036038101906100f29190610f39565b61037c565b60405161010a9796959493929190610fc2565b60405180910390f35b61012d60048036038101906101289190610f39565b61042b565b005b610137610667565b60405161014491906110ef565b60405180910390f35b610155610740565b005b610171600480360381019061016c919061113d565b610754565b60405161017e9190610eed565b60405180910390f35b61018f610ae9565b60405161019c91906111a4565b60405180910390f35b6101bf60048036038101906101ba9190610f39565b610b12565b6040516101cc919061126b565b60405180910390f35b6101ef60048036038101906101ea9190611286565b610c7a565b005b60025481565b60006001600083815260200190815260200160002090508060060160009054906101000a900460ff1661025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690611310565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806102ef57503373ffffffffffffffffffffffffffffffffffffffff166102d7610ae9565b73ffffffffffffffffffffffffffffffffffffffff16145b61032e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103259061137c565b60405180910390fd5b60008160060160006101000a81548160ff021916908315150217905550817fbd2bcea75d16a85f005cd83447e0de57341bf926fe7419e6d553663e91ab4da760405160405180910390a25050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16905087565b60006001600083815260200190815260200160002090508060060160009054906101000a900460ff16610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90611310565b60405180910390fd5b80600501544210156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d1906113e8565b60405180910390fd5b60008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600201546040518463ffffffff1660e01b815260040161058c93929190611408565b6020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf919061146b565b61060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906114e4565b60405180910390fd5b81600301544261061e9190611533565b8260050181905550827f5838e0e9882ba51d885397e944dc4e853ca3ac94353d8c3e7c38c7e1fcf85f5e836002015460405161065a9190610eed565b60405180910390a2505050565b6060600060025467ffffffffffffffff81111561068757610686611567565b5b6040519080825280602002602001820160405280156106b55781602001602082028036833780820191505090505b509050600080600190505b6002548111610734576001600082815260200190815260200160002060060160009054906101000a900460ff1615610721578083838151811061070657610705611596565b5b602002602001018181525050818061071d906115c5565b9250505b808061072c906115c5565b9150506106c0565b50808252819250505090565b610748610d00565b6107526000610d87565b565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90611659565b60405180910390fd5b60008411610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe906116c5565b60405180910390fd5b6000831161084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190611731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061179d565b60405180910390fd5b600260008154809291906108cc906115c5565b91905055506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200184426109489190611533565b81526020016001151581525060016000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166002547fa140d05947f5ffa84ec698092f79c8dd3a48e405c9e9c7b84903fa177110b7c060405160405180910390a46002549050949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b1a610e53565b600160008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050919050565b610c82610d00565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf45760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ceb91906111a4565b60405180910390fd5b610cfd81610d87565b50565b610d08610e4b565b73ffffffffffffffffffffffffffffffffffffffff16610d26610ae9565b73ffffffffffffffffffffffffffffffffffffffff1614610d8557610d49610e4b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d7c91906111a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6000819050919050565b610ee781610ed4565b82525050565b6000602082019050610f026000830184610ede565b92915050565b600080fd5b610f1681610ed4565b8114610f2157600080fd5b50565b600081359050610f3381610f0d565b92915050565b600060208284031215610f4f57610f4e610f08565b5b6000610f5d84828501610f24565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9182610f66565b9050919050565b610fa181610f86565b82525050565b60008115159050919050565b610fbc81610fa7565b82525050565b600060e082019050610fd7600083018a610f98565b610fe46020830189610f98565b610ff16040830188610ede565b610ffe6060830187610ede565b61100b6080830186610f98565b61101860a0830185610ede565b61102560c0830184610fb3565b98975050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61106681610ed4565b82525050565b6000611078838361105d565b60208301905092915050565b6000602082019050919050565b600061109c82611031565b6110a6818561103c565b93506110b18361104d565b8060005b838110156110e25781516110c9888261106c565b97506110d483611084565b9250506001810190506110b5565b5085935050505092915050565b600060208201905081810360008301526111098184611091565b905092915050565b61111a81610f86565b811461112557600080fd5b50565b60008135905061113781611111565b92915050565b6000806000806080858703121561115757611156610f08565b5b600061116587828801611128565b945050602061117687828801610f24565b935050604061118787828801610f24565b925050606061119887828801611128565b91505092959194509250565b60006020820190506111b96000830184610f98565b92915050565b6111c881610f86565b82525050565b6111d781610fa7565b82525050565b60e0820160008201516111f360008501826111bf565b50602082015161120660208501826111bf565b506040820151611219604085018261105d565b50606082015161122c606085018261105d565b50608082015161123f60808501826111bf565b5060a082015161125260a085018261105d565b5060c082015161126560c08501826111ce565b50505050565b600060e08201905061128060008301846111dd565b92915050565b60006020828403121561129c5761129b610f08565b5b60006112aa84828501611128565b91505092915050565b600082825260208201905092915050565b7f537562736372697074696f6e206973206e6f7420616374697665000000000000600082015250565b60006112fa601a836112b3565b9150611305826112c4565b602082019050919050565b60006020820190508181036000830152611329816112ed565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611366600e836112b3565b915061137182611330565b602082019050919050565b6000602082019050818103600083015261139581611359565b9050919050565b7f5061796d656e74206e6f74206475652079657400000000000000000000000000600082015250565b60006113d26013836112b3565b91506113dd8261139c565b602082019050919050565b60006020820190508181036000830152611401816113c5565b9050919050565b600060608201905061141d6000830186610f98565b61142a6020830185610f98565b6114376040830184610ede565b949350505050565b61144881610fa7565b811461145357600080fd5b50565b6000815190506114658161143f565b92915050565b60006020828403121561148157611480610f08565b5b600061148f84828501611456565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006114ce600f836112b3565b91506114d982611498565b602082019050919050565b600060208201905081810360008301526114fd816114c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153e82610ed4565b915061154983610ed4565b925082820190508082111561156157611560611504565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115d082610ed4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361160257611601611504565b5b600182019050919050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b60006116436015836112b3565b915061164e8261160d565b602082019050919050565b6000602082019050818103600083015261167281611636565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006116af601d836112b3565b91506116ba82611679565b602082019050919050565b600060208201905081810360008301526116de816116a2565b9050919050565b7f496e74657276616c206d7573742062652067726561746572207468616e203000600082015250565b600061171b601f836112b3565b9150611726826116e5565b602082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b60006117876019836112b3565b915061179282611751565b602082019050919050565b600060208201905081810360008301526117b68161177a565b905091905056fea2646970667358221220b97b3fbb0498419ab5d5acaa41779ff9b359888e1c353080efdca05445282a6064736f6c63430008180033";

type SubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionManager__factory extends ContractFactory {
  constructor(...args: SubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubscriptionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SubscriptionManager__factory {
    return super.connect(runner) as SubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionManagerInterface {
    return new Interface(_abi) as SubscriptionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubscriptionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SubscriptionManager;
  }
}
